basePath: /api/v1
definitions:
  likes.ReactionResponse:
    properties:
      id:
        type: string
    type: object
  posts.CommentResponse:
    properties:
      author_id:
        type: string
      id:
        type: string
      text:
        type: string
    type: object
  posts.CreateCommentRequest:
    properties:
      text:
        type: string
    type: object
  posts.CreatePostRequest:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  posts.PostResponse:
    properties:
      author_id:
        type: string
      comments:
        items:
          $ref: '#/definitions/posts.CommentResponse'
        type: array
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  posts.UpdateCommentRequest:
    properties:
      text:
        type: string
    type: object
  posts.UpdatePostRequest:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  schemas.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  schemas.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  schemas.LoginResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  schemas.RefreshTokenResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  schemas.SignupUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  schemas.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  schemas.UpdateUser:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
  schemas.UserResponse:
    properties:
      create_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: fvi-it@mail.ru
    name: Идель Фазлетдинов
  description: API-интерфейс, выступающий в роли шлюза для управления постами, комментариями
    и пользователями в Go с использованием платформы Gin framework.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Gin Api-Gateway Service
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Для получения токенов
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schemas.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Получение access и refresh токена в формате JSON
      tags:
      - Auth
  /post:
    post:
      consumes:
      - application/json
      parameters:
      - description: Создание Post
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/posts.CreatePostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Создание Post
      tags:
      - Posts
  /post/{post_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Удаление Post
      tags:
      - Posts
    get:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/posts.PostResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Получение Post
      tags:
      - Posts
    put:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Для обновления Post
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/posts.UpdatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Обновление Post
      tags:
      - Posts
  /post/{post_id}/comment:
    post:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Создание Comment
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/posts.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Создание Comment
      tags:
      - Comment
  /post/{post_id}/comment/{comment_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Удаление Comment
      tags:
      - Comment
    put:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: string
      - description: Для обновления Post
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/posts.UpdateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Обновление Comment
      tags:
      - Comment
  /post/{post_id}/comments:
    get:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/posts.CommentResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Получение списока Comment
      tags:
      - Comment
  /post/{post_id}/reaction:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Удаление Reaction
      tags:
      - Reaction
    post:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Создание Reaction
      tags:
      - Reaction
  /post/{post_id}/reactions:
    get:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/likes.ReactionResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Получение списока Reactin на Post
      tags:
      - Reaction
  /posts:
    get:
      consumes:
      - application/json
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/posts.PostResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Получение списока Post
      tags:
      - Posts
  /refresh:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Обновление токенов
      tags:
      - Auth
  /user/delete:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Удаление пользователя
      tags:
      - Auth
  /user/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Получение пользователя
      tags:
      - Auth
  /user/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Для создания пользователя и получения токенов
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schemas.SignupUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Регистрация пользователя и получение токенов
      tags:
      - Auth
  /user/update:
    put:
      consumes:
      - application/json
      parameters:
      - description: Для получения обновления пользователя
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Обновление пользователя
      tags:
      - Auth
swagger: "2.0"
